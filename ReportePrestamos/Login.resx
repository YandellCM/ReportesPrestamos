<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAC0ASADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDyWlFJSiulHOOFOpo6U4VaJY4U8U0U8VaM2PFPFMFSCtEZsetS
        LUYqRa1RkyRalWolqVa1RkyZamWoVqZa0RkydfrU0ZNQpU6CrJJkJ9amQn1qJBUyimUiVSfWpVz61Goq
        VRTNEPUn1qQZz1pgFSKKZqhwz60c+tKKXFBqhvPrSc+tPIpMVSNERnPPNNJPrUhFMIxVpmiIzn1pp571
        IR1ppFUWkRke9MOfWpcU0rRcojOfWmnPrTyKbilcBh+tJ3604j2pMHNAHmtOApMU4CvnCAAp4FNAp4HF
        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
</value>
  </data>
</root>